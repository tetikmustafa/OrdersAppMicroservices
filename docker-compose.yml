version: '3.8'
services:
  serviceregistry:
    image: tet1k/ordersapp_serviceregistry:v3
    ports:
      - 8761:8761
    healthcheck:
        test: ["CMD", "curl", "-f", "http://localhost:8761"]
        retries: 20
        interval: 3s
        timeout: 30s
    networks:
      - springboot-mysql-network
  apigateway:
    image: tet1k/ordersapp_apigateway:v4
    ports:
      - 8080:8080
    depends_on:
      serviceregistry:
        condition: service_healthy
      customerservice:
          condition: service_started
      orderservice:
        condition: service_started
    environment:
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://serviceregistry:8761/eureka
      - SPRING_CLOUD_GATEWAY_GLOBALCORS_CORS-CONFIGURATIONS_0_ALLOWEDORIGINS=*
    networks:
      - springboot-mysql-network
  customerservice:
    image: tet1k/ordersapp_customerservice:v3
    ports:
      - 8082:8082
    depends_on:
      mysqldb:
        condition: service_healthy
      serviceregistry:
        condition: service_healthy
      orderservice:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/customersdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://serviceregistry:8761/eureka
    networks:
      - springboot-mysql-network
  orderservice:
    image: tet1k/ordersapp_orderservice:v3
    ports:
      - 8083:8083
    depends_on:
      mysqldb:
        condition: service_healthy
      serviceregistry:
        condition: service_healthy
    environment:
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/ordersdb
      - SPRING_DATASOURCE_USERNAME=root
      - SPRING_DATASOURCE_PASSWORD=12345
      - EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE=http://serviceregistry:8761/eureka
    networks:
      - springboot-mysql-network
  mysqldb:
    image: tet1k/ordersapp_mysqldb:v2
    ports:
      - 3307:3306
    environment:
      - MYSQL_ROOT_PASSWORD=12345
    volumes:
      - mysql-data:/var/lib/mysql
    networks:
      - springboot-mysql-network
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      retries: 20
      interval: 3s
      timeout: 30s
volumes:
  mysql-data:
networks:
  springboot-mysql-network:
    name: springboot-mysql-network